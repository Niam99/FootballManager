#+title: Sprint Backlog 00 for Patrick
#+options: date:nil toc:nil author:nil num:nil
#+todo: STARTED | COMPLETED CANCELLED POSTPONED
#+tags: { story(s) epic(e) }

* Mission Statement

- Create a Football Manager Game

* Stories

Stories you are working on this sprint.

** Active

#+begin: clocktable :maxlevel 3 :scope subtree :indent nil :emphasize nil :scope file :narrow 75 :formula %
#+CAPTION: Clock summary at [2018-01-30 Tue 12:27]
| <75>                                                                        |         |       |      |       |
| Headline                                                                    | Time    |       |      |     % |
|-----------------------------------------------------------------------------+---------+-------+------+-------|
| *Total time*                                                                | *10:12* |       |      | 100.0 |
|-----------------------------------------------------------------------------+---------+-------+------+-------|
| Stories                                                                     | 10:12   |       |      | 100.0 |
| Active                                                                      |         | 10:12 |      | 100.0 |
| STARTED Sprint and product backlog grooming                                 |         |       | 1:02 |  10.1 |
| COMPLETED Understanding Some Essentials of MaGit                            |         |       | 7:28 |  73.2 |
| COMPLETED Create League.cpp/hpp                                             |         |       | 0:59 |   9.6 |
| COMPLETED Create game.cpp/hpp                                               |         |       | 0:43 |   7.0 |
#+TBLFM: $5='(org-clock-time% @3$2 $2..$4);%.1f
#+end:


*** STARTED Sprint and product backlog grooming                       :story:
    CLOCK: [2018-01-30 Tue 12:10]--[2018-01-30 Tue 12:19] =>  0:09
    CLOCK: [2018-01-30 Tue 09:01]--[2018-01-30 Tue 09:54] =>  0:53

Updates to sprint and product backlog.

*** COMPLETED Understanding Some Essentials of MaGit
    CLOSED: [2018-01-30 Tue 09:47]
    CLOCK: [2018-01-29 Mon 17:56]--[2018-01-29 Mon 18:19] =>  0:23
    CLOCK: [2018-01-29 Mon 17:14]--[2018-01-29 Mon 17:54] =>  0:40
    CLOCK: [2018-01-29 Mon 14:36]--[2018-01-29 Mon 18:05] =>  3:29
    CLOCK: [2018-01-29 Mon 09:52]--[2018-01-29 Mon 12:48] =>  2:56

Notes on magit pushing

1. first make sure all files have been either committed or stashed.
2. Then in magit type b b master to change to master.
3. Then pull master with F u.
4. Then go back to your branch with b b development.
5. Rebase the branch. In magit r e master.
6. now go back to master b b master.
7. merge your branch into master: m m development.
8. if all has gone well, you can push master to remote: P u.
9. go back to your branch and do work.

Links:

- https://github.com/jkitchin/magit-tutorial

*** COMPLETED Create a personal branch
    CLOSED: [2018-01-30 Tue 09:48]

Simple branching workflow:

- make sure you have ido-mode on as it makes it much easier to select
  the branches.
- create a new branch in magit: Type b c. The starting point should be
  master.Then give it a name (e.g. development).
- do work as usual, commit etc. When you want to push:
  1. first make sure all files have been either committed or stashed.
  2. Then in magit type b b master to change to master.
  3. Then pull master with F u.
  4. Then go back to your branch with b b development.
  5. Rebase the branch. In magit r e master.
  6. now go back to master b b master.
  7. merge your branch into master: m m development.
  8. if all has gone well, you can push master to remote: P u.
  9. go back to your branch and do work.

*** COMPLETED Create League.cpp/hpp
    CLOSED: [2018-01-30 Tue 11:25]
    CLOCK: [2018-01-30 Tue 10:26]--[2018-01-30 Tue 11:25] =>  0:59

-Created league.cpp/hpp

-Connected it to main.cpp

-Updated CMakeLists.txt

-Compile

-Test to see if working

*** COMPLETED Create game.cpp/hpp
    CLOSED: [2018-01-30 Tue 12:18]
    CLOCK: [2018-01-30 Tue 11:26]--[2018-01-30 Tue 12:09] =>  0:43

-Created game.cpp/hpp

-Connected it to main.cpp

-Updated CMakeLists.txt

-Compile

-Test to see if working

*** STARTED Create teams and players

-Make appropriate cpp files

-Use diagram on Dia for correct vars

-Use for players: https://www.premierleague.com/players

-Input players and teams

-If all goes well see if you can create a table in league and place vars from teams


** Deprecated
